/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */

/* Document
   ========================================================================== */

/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */

html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
     ========================================================================== */

/**
   * Remove the margin in all browsers.
   */

body {
  margin: 0;
}

/**
   * Render the `main` element consistently in IE.
   */

main {
  display: block;
}

/**
   * Correct the font size and margin on `h1` elements within `section` and
   * `article` contexts in Chrome, Firefox, and Safari.
   */

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
     ========================================================================== */

/**
   * 1. Add the correct box sizing in Firefox.
   * 2. Show the overflow in Edge and IE.
   */

hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
   * 1. Correct the inheritance and scaling of font size in all browsers.
   * 2. Correct the odd `em` font sizing in all browsers.
   */

pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
     ========================================================================== */

/**
   * Remove the gray background on active links in IE 10.
   */

a {
  background-color: transparent;
}

/**
   * 1. Remove the bottom border in Chrome 57-
   * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
   */

abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  /* 2 */
}

/**
   * Add the correct font weight in Chrome, Edge, and Safari.
   */

b,
strong {
  font-weight: bolder;
}

/**
   * 1. Correct the inheritance and scaling of font size in all browsers.
   * 2. Correct the odd `em` font sizing in all browsers.
   */

code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
   * Add the correct font size in all browsers.
   */

small {
  font-size: 80%;
}

/**
   * Prevent `sub` and `sup` elements from affecting the line height in
   * all browsers.
   */

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
     ========================================================================== */

/**
   * Remove the border on images inside links in IE 10.
   */

img {
  border-style: none;
}

/* Forms
     ========================================================================== */

/**
   * 1. Change the font styles in all browsers.
   * 2. Remove the margin in Firefox and Safari.
   */

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
   * Show the overflow in IE.
   * 1. Show the overflow in Edge.
   */

button,
input {
  /* 1 */
  overflow: visible;
}

/**
   * Remove the inheritance of text transform in Edge, Firefox, and IE.
   * 1. Remove the inheritance of text transform in Firefox.
   */

button,
select {
  /* 1 */
  text-transform: none;
}

/**
   * Correct the inability to style clickable types in iOS and Safari.
   */

button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

/**
   * Remove the inner border and padding in Firefox.
   */

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
   * Restore the focus styles unset by the previous rule.
   */

button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
   * Correct the padding in Firefox.
   */

fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
   * 1. Correct the text wrapping in Edge and IE.
   * 2. Correct the color inheritance from `fieldset` elements in IE.
   * 3. Remove the padding so developers are not caught out when they zero out
   *    `fieldset` elements in all browsers.
   */

legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
   * Add the correct vertical alignment in Chrome, Firefox, and Opera.
   */

progress {
  vertical-align: baseline;
}

/**
   * Remove the default vertical scrollbar in IE 10+.
   */

textarea {
  overflow: auto;
}

/**
   * 1. Add the correct box sizing in IE 10.
   * 2. Remove the padding in IE 10.
   */

[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
   * Correct the cursor style of increment and decrement buttons in Chrome.
   */

[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
   * 1. Correct the odd appearance in Chrome and Safari.
   * 2. Correct the outline style in Safari.
   */

[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
   * Remove the inner padding in Chrome and Safari on macOS.
   */

[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
   * 1. Correct the inability to style clickable types in iOS and Safari.
   * 2. Change font properties to `inherit` in Safari.
   */

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
     ========================================================================== */

/*
   * Add the correct display in Edge, IE 10+, and Firefox.
   */

details {
  display: block;
}

/*
   * Add the correct display in all browsers.
   */

summary {
  display: list-item;
}

/* Misc
     ========================================================================== */

/**
   * Add the correct display in IE 10+.
   */

template {
  display: none;
}

/**
   * Add the correct display in IE 10.
   */

[hidden] {
  display: none;
}

:root {
  --color-black: #000;
  --color-white: #fff;
}

@font-face {
  font-family: "Montserrat";
  src: url("./static/fonts/Montserrat-Bold.woff") format("woff");
  font-weight: 700;
  font-display: swap;
  font-style: normal;
}

@font-face {
  font-family: "Montserrat";
  src: url("./static/fonts/Montserrat-Bold.woff2") format("woff2");
  font-weight: 700;
  font-display: swap;
  font-style: normal;
}

@font-face {
  font-family: "Montserrat";
  src: url("./static/fonts/Montserrat-Regular.woff") format("woff");
  font-weight: 400;
  font-display: swap;
  font-style: normal;
}

@font-face {
  font-family: "Montserrat";
  src: url("./static/fonts/Montserrat-Regular.woff2") format("woff2");
  font-weight: 400;
  font-display: swap;
  font-style: normal;
}

@font-face {
  font-family: "Montserrat";
  src: url("./static/fonts/Montserrat-Thin.woff") format("woff");
  font-weight: 100;
  font-display: swap;
  font-style: normal;
}

@font-face {
  font-family: "Montserrat";
  src: url("./static/fonts/Montserrat-Thin.woff2") format("woff2");
  font-weight: 100;
  font-display: swap;
  font-style: normal;
}

html {
  box-sizing: border-box;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

body {
  margin: 0;
  color: var(--color-dark);
  font-size: 18px;
  font-family: "Montserrat", sans-serif;
  font-weight: 1235px;
  background-color: var(--color-white);
}

img {
  max-width: 100%;
  height: auto;
}

a {
  text-decoration: none;
  color: inherit;
}

button {
  cursor: pointer;
  text-decoration: none;
  border: none;
}

button:focus {
  outline: none;
}

ul {
  padding: 0;
  margin: 0;
  list-style: none;
}

h1,
h2,
h3,
h4,
h5,
h6,
p {
  padding: 0;
  margin: 0;
}

.container {
  width: 100%;
  max-width: 1235px;
  padding: 0 20px;
  margin: 0 auto;
}

.visually-hidden {
  position: absolute !important;
  clip: rect(1px 1px 1px 1px);
  clip: rect(1px, 1px, 1px, 1px);
  padding: 0 !important;
  border: 0 !important;
  height: 1px !important;
  width: 1px !important;
  overflow: hidden;
}

.main-btn {
  display: inline-block;
  position: relative;
  padding: 20px 0;
  border-radius: 12px;
  -webkit-transition: background-color .3s;
  transition: background-color .3s;
  text-align: center;
}

.main-btn__icon {
  position: absolute;
  z-index: 1;
  bottom: calc(100% - 3px);
  left: 50%;
  -webkit-transform: translateX(-50%);
  -ms-transform: translateX(-50%);
  transform: translateX(-50%);
}

.btn_bright {
  background-color: #FBCB03;
}

.btn_bright:hover {
  background-color: #E6B901;
}

.btn_dark {
  color: var(--color-white);
  background-color: var(--color-black);
}

.btn_dark:hover {
  background-color: rgba(0, 0, 0, 0.8);
}

.btn_question {
  width: 100%;
  border: 1px solid var(--color-white);
  border-radius: 45px;
  padding: 16px 30px;
  background-color: transparent;
  -webkit-transition: background-color .3s, color .3s;
  transition: background-color .3s, color .3s;
}

.btn_question:hover {
  background-color: var(--color-white);
  color: var(--color-black);
}

.hero {
  position: relative;
  height: 100vh;
  min-height: 600px;
  display: -webkit-box;
  display: flex;
  -webkit-box-align: center;
  align-items: center;
  padding-top: 80px;
  overflow-x: hidden;
}

.hero__content {
  display: grid;
  grid-template-columns: 5fr 7fr;
  -webkit-box-align: center;
  align-items: center;
  height: 100%;
}

.hero__title {
  max-width: 460px;
  font-weight: 700;
  margin-bottom: 20px;
}

.hero__desc {
  max-width: 520px;
  font-weight: 300;
  margin-bottom: 120px;
}

.hero__desc > p + p {
  margin-top: 20px;
}

.hero__btns {
  max-width: 450px;
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-column-gap: 15px;
  margin-bottom: 30px;
}

.main__header {
  margin-bottom: 56px;
}

.hero-img {
  padding-top: 200px;
  padding-left: 200px;
  position: absolute;
  right: 0;
}

.hero-img__image {
  min-width: 714px;
  min-height: 611px;
  z-index: 1;
}

.lines {
  position: absolute;
  top: -70px;
  z-index: -1;
  right: -120px;
  width: 730px;
  height: 700px;
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  flex-direction: column;
  -webkit-box-pack: justify;
  justify-content: space-between;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
  overflow: hidden;
}

.lines .line {
  position: relative;
  height: 60px;
  background-color: var(--color-black);
  width: 100%;
  -webkit-animation: 3s linear .3s infinite move;
  animation: 3s linear .3s infinite move;
}

.lines .line::after {
  content: '';
  position: absolute;
  bottom: -40px;
  right: -20px;
  height: 100px;
  width: 160px;
  background-color: var(--color-white);
  -webkit-transform: rotate(-45deg);
  -ms-transform: rotate(-45deg);
  transform: rotate(-45deg);
}

.lines .line-5 {
  width: 60%;
}

@-webkit-keyframes move {
  0% {
    -webkit-transform: translateY(0);
    transform: translateY(0);
  }

  100% {
    -webkit-transform: translateY(-160px);
    transform: translateY(-160px);
  }
}

@keyframes move {
  0% {
    -webkit-transform: translateY(0);
    transform: translateY(0);
  }

  100% {
    -webkit-transform: translateY(-160px);
    transform: translateY(-160px);
  }
}

.hero-modal {
  position: absolute;
  z-index: 100;
  top: 0;
  min-height: 100%;
  width: 100%;
  background-color: var(--color-white);
  padding: 87px 0;
  -webkit-transform: scaleX(0);
  -ms-transform: scaleX(0);
  transform: scaleX(0);
  -webkit-transform-origin: left;
  -ms-transform-origin: left;
  transform-origin: left;
  -webkit-transition: -webkit-transform .3s;
  transition: -webkit-transform .3s;
  transition: transform .3s;
  transition: transform .3s, -webkit-transform .3s;
}

.hero-modal.active {
  -webkit-transform: scaleX(1) !important;
  -ms-transform: scaleX(1) !important;
  transform: scaleX(1) !important;
}

.hero-modal__container {
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  flex-direction: column;
  height: 100%;
}

.hero-modal__close {
  display: -webkit-box;
  display: flex;
  -webkit-box-align: center;
  align-items: center;
  background-color: transparent;
  margin-top: auto;
}

.hero-modal__close > svg {
  width: 30px;
  height: 18px;
}

.hero-modal-cards {
  max-width: 1264px;
  display: -webkit-box;
  display: flex;
  margin-bottom: 20px;
}

.modal-card {
  position: relative;
  max-height: 498px;
  border: 1px solid rgba(0, 0, 0, 0.1);
  border-radius: 20px;
  padding: 56px 52px 40px;
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  flex-direction: column;
  -webkit-box-pack: justify;
  justify-content: space-between;
  width: calc(50% - 22px);
}

.modal-card:first-child {
  margin-right: 44px;
}

.modal-card_dark {
  background-color: var(--color-black);
  color: var(--color-white);
}

.modal-card_dark .modal-card__submit {
  top: 0;
  border-radius: 20px;
  background-color: var(--color-black);
}

.modal-card__header {
  display: -webkit-box;
  display: flex;
  -webkit-box-align: center;
  align-items: center;
  max-width: 400px;
}

.modal-card__title {
  font-weight: 700;
  margin-left: 20px;
}

.modal-card__personal {
  color: rgba(0, 0, 0, 0.32);
  display: block;
  font-size: 12px;
  max-width: 240px;
}

.modal-card__personal > a {
  position: relative;
}

.modal-card__personal > a:hover::after {
  width: 0;
}

.modal-card__personal > a::after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  background-color: currentColor;
  display: block;
  height: 1px;
  width: 100%;
}

.modal-card__submit {
  position: absolute;
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  flex-direction: column;
  -webkit-box-align: center;
  align-items: center;
  -webkit-box-pack: center;
  justify-content: center;
  background-color: var(--color-white);
  top: 120px;
  bottom: 0;
  left: 0;
  right: 0;
  -webkit-transform: scale(0);
  -ms-transform: scale(0);
  transform: scale(0);
  -webkit-transition: -webkit-transform .3s;
  transition: -webkit-transform .3s;
  transition: transform .3s;
  transition: transform .3s, -webkit-transform .3s;
}

.modal-card__submit.active {
  -webkit-transform: scale(1);
  -ms-transform: scale(1);
  transform: scale(1);
}

.modal-card-form {
  display: -webkit-box;
  display: flex;
  flex-wrap: wrap;
  gap: 20px 10px;
  font-size: 14px;
}

.modal-card-form__btn,
.modal-card-form__input {
  border-radius: 11px;
}

.modal-card-form__btn {
  -webkit-box-flex: 1;
  flex-grow: 1;
  padding: 16px 32px;
  background-color: transparent;
  border: 1px solid rgba(0, 0, 0, 0.16);
  -webkit-transition: background-color .3s;
  transition: background-color .3s;
}

.modal-card-form__btn:hover {
  background-color: #F2F2F2;
}

.modal-card-form__input {
  width: 334px;
  -webkit-box-flex: 100;
  flex-grow: 100;
  padding: 16px 0 16px 28px;
  background-color: #F8F8F8;
  border: none;
}

.modal-card-list {
  padding: 60px;
}

.modal-card-list > li + li {
  margin-top: 20px;
}

.modal-card-list > li button {
  color: var(--color-white);
}

@media (min-width: 767px) {
  .main-btn {
    font-size: calc(15px +  3 * ((100vw - 320px) / 1920));
  }

  .hero__title {
    font-size: calc(28px +  22 * ((100vw - 320px) / 1920));
  }

  .hero-modal__close {
    font-size: calc(14px +  14 * ((100vw - 320px) / 1920));
  }

  .modal-card__title {
    font-size: calc(16px +  12 * ((100vw - 320px) / 1920));
  }

  .modal-card-list {
    font-size: calc(12px +  6 * ((100vw - 320px) / 1920));
  }
}

@media screen and (min-width: 1000px) {
  .hero {
    overflow: hidden;
  }
}

@media (min-width: 1920px) {
  .main-btn {
    font-size: 18;
  }

  .hero__title {
    font-size: 50;
  }

  .hero-modal__close {
    font-size: 28;
  }

  .modal-card__title {
    font-size: 28;
  }

  .modal-card-list {
    font-size: 18;
  }
}

@media screen and (max-width: 1920px) {
  .hero-img {
    top: 0;
    height: 100%;
  }
}

@media screen and (max-width: 1500px) {
  .hero__desc {
    margin-bottom: 80px;
  }
}

@media screen and (max-width: 1150px) {
  .hero {
    padding-top: 40px;
  }

  .hero__content {
    grid-template-columns: 1fr 1fr;
  }

  .hero-img {
    -webkit-transform: scale(0.7);
    -ms-transform: scale(0.7);
    transform: scale(0.7);
    right: -140px;
  }

  .hero-modal {
    padding: 20px 0;
  }

  .hero-modal-cards {
    -webkit-box-orient: vertical;
    -webkit-box-direction: reverse;
    flex-direction: column-reverse;
    -webkit-box-align: center;
    align-items: center;
  }

  .modal-card {
    width: 100%;
    margin-bottom: 30px;
  }

  .modal-card:first-child {
    margin-right: 0;
    min-height: 350px;
  }
}

@media screen and (max-width: 995px) {
  .hero__content {
    grid-template-columns: 3fr 2fr;
  }

  .hero__title {
    max-width: 400px;
  }

  .hero__desc {
    max-width: 360px;
  }
}

@media screen and (max-width: 875px) {
  .hero__content {
    grid-template-columns: 1fr;
  }

  .hero-img {
    -webkit-transform: scale(0.5);
    -ms-transform: scale(0.5);
    transform: scale(0.5);
    right: -230px;
  }

  .hero-img {
    top: -210px;
  }
}

@media (max-width: 767px) {
  .main-btn {
    font-size: calc(15px + 5.1 * ((100vw - 320px) / 1920));
  }

  .hero__title {
    font-size: calc(28px + 37.4 * ((100vw - 320px) / 1920));
  }

  .hero-modal__close {
    font-size: calc(14px + 23.8 * ((100vw - 320px) / 1920));
  }

  .modal-card__title {
    font-size: calc(16px + 20.4 * ((100vw - 320px) / 1920));
  }

  .modal-card-list {
    font-size: calc(12px + 10.2 * ((100vw - 320px) / 1920));
  }
}

@media screen and (max-width: 690px) {
  .hero {
    padding-top: 360px;
  }

  .hero-img {
    -webkit-transform: scale(0.6);
    -ms-transform: scale(0.6);
    transform: scale(0.6);
    right: -190px;
  }
}

@media screen and (max-width: 590px) {
  .modal-card {
    padding: 20px;
  }

  .modal-card-list {
    padding: 20px 0;
    margin-bottom: auto;
  }
}

@media screen and (max-width: 560px) {
  .hero-img {
    -webkit-transform: scale(0.5);
    -ms-transform: scale(0.5);
    transform: scale(0.5);
    right: -230px;
  }
}

@media screen and (max-width: 500px) {
  .hero__title {
    max-width: 350px;
  }

  .main__header {
    margin-bottom: 56px;
  }
}

@media screen and (max-width: 440px) {
  .hero {
    padding-top: 450px;
  }
}

@media screen and (max-width: 360px) {
  .hero-img {
    -webkit-transform: scale(0.4);
    -ms-transform: scale(0.4);
    transform: scale(0.4);
    top: -210px;
    right: -275px;
  }
}

@media screen and (max-width: 352px) {
  .hero {
    padding-top: 500px;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
